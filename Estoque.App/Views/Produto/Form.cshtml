@using Estoque.Negocio.Dominios;
@using Estoque.App.Utilities;
@model Estoque.App.Models.ProdutoView

@{
    ViewData["Title"] = "Produto";
    Operacao operacao = ViewBag.Operacao;
}
<div class="card bg-transparent border-0 h-100">
    <div class="card-header bg-transparent border-0"><h1>@ViewData["Title"]</h1></div>
    <div class="card-body py-2">
        <form method="post" asp-action="Form" asp-route-operacao="@operacao" asp-antiforgery="true" onsubmit="return Produto.AntesSalvar(this);">
            <div class="card p-0 shadow">
                <div class="card-body">
                    <div id="estoque-produto-mensagens">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-2">
                            <label asp-for="Id" class="control-label"></label>
                            <input asp-for="Id" class="form-control" readonly-when="true" />
                            <span asp-validation-for="Id" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-5">
                            <label asp-for="Descricao" class="control-label"></label>
                            <input asp-for="Descricao" class="form-control" readonly-when="@(operacao== Operacao.Details || operacao == Operacao.Delete)" />
                            <span asp-validation-for="Descricao" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-3">
                            <label asp-for="Status" class="control-label"></label>
                            <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<TipoStatus>()" readonly-when="@(operacao== Operacao.Details || operacao == Operacao.Delete)"></select>
                            <span asp-validation-for="Status" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label asp-for="Tipo" class="control-label"></label>
                            <select asp-for="Tipo" class="form-control" asp-items="Html.GetEnumSelectList<TipoProduto>()" readonly-when="@(operacao== Operacao.Details || operacao == Operacao.Delete)"></select>
                            <span asp-validation-for="Tipo" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-4">
                            <label asp-for="CategoriaId" class="control-label"></label>
                            <input asp-for="CategoriaDescricao" placeholder="Digite uma ou mais letras para realizar a pesquisa" class="form-control" readonly-when="@(operacao== Operacao.Details || operacao == Operacao.Delete)" />
                            <input asp-for="CategoriaId" type="hidden" />
                            <input id="categoria-id-controle" type="hidden" value="@Model?.CategoriaId" />
                            <span asp-validation-for="CategoriaId" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row">
                        <div class="col"></div>
                        @if (operacao != Operacao.Details)
                        {
                            <div class="col-sm col-md-3 col-lg-2">
                                @if (operacao == Operacao.Delete)
                                {
                                    <button type="submit" class="btn btn-block btn-danger">Excluir</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-block btn-primary">Confirmar</button>
                                }
                            </div>
                        }
                        <div class="col-sm col-md-3 col-lg-2">
                            <a asp-action="Index" class="btn btn-block btn-secondary">Fechar</a>
                        </div>

                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        Produto = {};
        Produto.Inicializar = function () {
            $('#@Html.IdFor(m => m.CategoriaDescricao)').autocomplete({
                source: function (request, response) {
                    Produto.BuscarCategoria(request.term, function (resultado) {
                        let result = $.map(resultado, function (item) {
                            return { value: item.id, label: item.descricao, objeto: item };
                        });
                        response(result);
                    });
                },
                delay: 1000,
                focus: function (event, ui) {
                    Produto.PreencherCategoria(ui.item.objeto);
                    return false;
                },
                search: function (event, ui) {
                    $('#categoria-id-controle').val('');
                },
                select: function (event, ui) {
                    Produto.PreencherCategoria(ui.item.objeto);
                    return false;
                }
            });

            $('#@Html.IdFor(m => m.Id)').focus();
        };
        Produto.AntesSalvar = function (form) {
            let valorAtual = $('#@Html.IdFor(m => m.CategoriaId)').val();
            let valorAnterior = $('#categoria-id-controle').val();
            let textoAtual = $('#@Html.IdFor(m => m.CategoriaDescricao)').val();

            if ((valorAtual != valorAnterior && textoAtual) || (textoAtual && !valorAtual)) {
                Produto.BuscarCategoria(textoAtual, function (resultado) {
                    if (resultado.length > 0) {
                        Produto.PreencherCategoria(resultado[0]);
                        $(form).submit();
                    } else {
                        Produto.MostrarMensagem('Categoria não encontrada');
                    }
                });
                return false;
            } else {
                if (!textoAtual) {
                    Produto.PreencherCategoria({
                        id: null,
                        descricao: null,
                    });
                }
            }

            return true;
        };

        Produto.BuscarCategoria = function (pesquisa, complete) {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("Buscar", "Categoria")',
                data: { pesquisa: pesquisa },
                cache: false,
                complete: function (response, status) {
                    let resultado = response.status == 200 && response.responseJSON ? response.responseJSON : [];
                    complete(resultado);
                }
            });
        };

        Produto.PreencherCategoria = function(categoria) {
            $('#@Html.IdFor(m => m.CategoriaDescricao)').val(categoria.descricao);
            $('#@Html.IdFor(m => m.CategoriaId)').val(categoria.id);
            $('#categoria-id-controle').val(categoria.id);
        };

        Produto.MostrarMensagem = function (mensagem) {
            let $div = $('.validation-summary-errors');
            if ($div.length == 0) {
                $div = $('<div class="validation-summary-errors text-danger" />');
                $div.appendTo('#estoque-produto-mensagens');
            }
            let $ul = $div.find('ul');
            if ($ul.length == 0) {
                $ul = $('<ul />');
                $ul.appendTo($div);
            }

            $ul.append($('<li />').text(mensagem));
        }

        $(document).ready(function () {
            Produto.Inicializar();
        });
    </script>
}
